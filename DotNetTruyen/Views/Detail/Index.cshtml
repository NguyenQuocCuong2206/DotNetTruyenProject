@using System.Security.Claims
@model Comic
@{
    ViewData["Title"] = Model.Title;
}

<!-- Tailwind CSS -->

<link href="~/css/comment.css" rel="stylesheet" />

<body class="wp-manga-template-default single single-wp-manga postid-249 wp-embed-responsive wp-manga-page manga-page page header-style-1 sticky-enabled sticky-style-1 text-ui-light minimal-reading-layout">

    <div class="wrap">
        <div class="body-wrap">
            <partial name="_HeaderPartial" />

            <div class="site-content">
                <div class="post-249 wp-manga type-wp-manga status-publish has-post-thumbnail hentry wp-manga-tag-tag-1 wp-manga-tag-tag-2 wp-manga-tag-tag-3 wp-manga-release-4 wp-manga-author-the-author wp-manga-artist-artist wp-manga-genre-action wp-manga-genre-adventure wp-manga-genre-boys wp-manga-genre-chinese wp-manga-genre-drama wp-manga-genre-ecchi wp-manga-genre-fighting wp-manga-genre-fun wp-manga-genre-girl wp-manga-genre-horrow wp-manga-genre-manhwa chapter-listing-1">
                    <div class="profile-manga" style="">
                        <div class="container">
                            <div class="row">
                                <div class="left col-12 col-sm-12 col-md-4">
                                    <div class="manga-thumb">
                                        <div class="summary_image">
                                            <img src="@Model.CoverImage" alt="@Model.Title" width="450" height="450" class="w-full rounded-lg shadow-lg object-cover border border-gray-800">
                                            <span class="manga-title-badges custom trending">trending</span>                                                        <span class="manga-chapter-type">Video</span>
                                        </div>
                                    </div>

                                    <div class="action-buttons">
                                        <div class="left">

                                            <div id="init-links" class="nav-links">
                                                <a href="@Url.Action("ReadLastChapter", "ReadChapter", new { comicId = Model.Id })" id="btn-read-last" class="c-btn c-btn_style-1">Đọc Mới Nhất</a>
                                                <a href="@Url.Action("ReadFromBeginning", "ReadChapter", new { comicId = Model.Id })" id="btn-read-first" class="c-btn c-btn_style-1">Đọc Từ Đầu</a>
                                                <form method="post">
                                                    @Html.AntiForgeryToken()
                                                    <div class="d-flex flex-column gap-3 mt-3">
                                                        <button id="likeButton"
                                                                class="btn @(ViewBag.IsLiked ? "btn-primary" : "btn-outline-primary")"
                                                                data-comic-id="@Model.Id">
                                                            <i class="fas fa-heart"></i>
                                                            <span id="likeText">@(ViewBag.IsLiked ? "Đã thích" : "Thích")</span>
                                                        </button>
                                                    </div>
                                                </form>
                                                <form method="post">
                                                    @Html.AntiForgeryToken()
                                                    <div class="d-flex flex-column gap-3 mt-3">
                                                        <button id="followButton"
                                                                class="btn d-flex align-items-center justify-content-center gap-2 w-100 @(ViewBag.IsFollowing ? "btn-primary" : "btn-outline-dark")"
                                                                data-comic-id="@Model.Id">
                                                            <i class="fas fa-bookmark"></i>
                                                            <span id="followText">@(ViewBag.IsFollowing ? "Đang theo dõi" : "Theo dõi")</span>
                                                        </button>
                                                    </div>
                                                </form>

                                            </div>


                                        </div>
                                    </div>
                                    <div class="sidebar-col">
                                        <div id="main-sidebar" class="main-sidebar" role="complementary">
                                            <div class="row">
                                                <div id="text-2" class="widget col-12 col-md-12   default  no-icon heading-style-1 widget_text">
                                                    <div class="widget__inner widget_text__inner c-widget-wrap">
                                                        <div class="widget-heading font-nav"><h5 class="heading">Sidebar Widget</h5></div><div class="widget-content">
                                                            <div class="textwidget">
                                                                <p><a href="https://mangabooth.com/product/madara-child-x/" title="Buy Madara Child X"><img decoding="async" src="images/ads-square.jpg"></a></p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="right col-12 col-sm-12 col-md-8">
                                    <div class="post-title">
                                        <h1>
                                            @Model.Title
                                        </h1>
                                    </div>
                                    <div class="post-content">

                                        <div class="post-content_item">
                                            <div class="summary-content">
                                                <div class="genres-content">
                                                    <a href="https://live.mangabooth.com/x/manga-genre/action/" rel="tag">action</a> <a href="https://live.mangabooth.com/x/manga-genre/adventure/" rel="tag">adventure</a> <a href="https://live.mangabooth.com/x/manga-genre/boys/" rel="tag">boys</a> <a href="https://live.mangabooth.com/x/manga-genre/chinese/" rel="tag">chinese</a> <a href="https://live.mangabooth.com/x/manga-genre/drama/" rel="tag">drama</a> <a href="https://live.mangabooth.com/x/manga-genre/ecchi/" rel="tag">ecchi</a> <a href="https://live.mangabooth.com/x/manga-genre/fighting/" rel="tag">fighting</a> <a href="https://live.mangabooth.com/x/manga-genre/fun/" rel="tag">fun</a> <a href="https://live.mangabooth.com/x/manga-genre/girl/" rel="tag">girl</a> <a href="https://live.mangabooth.com/x/manga-genre/horrow/" rel="tag">horrow</a> <a href="https://live.mangabooth.com/x/manga-genre/manhwa/" rel="tag">manhwa</a>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="description-summary">

                                            <div class="summary__content">
                                                <p>@Model.Description</p>
                                            </div>

                                        </div>

                                        <div class="author-row">

                                            <div class="post-content_item">
                                                <div class="summary-heading">
                                                    <i class="fas fa-user text-primary me-2"></i>
                                                    <span class="fw-semibold">Tác Giả:</span>
                                                </div>
                                                <div class="summary-content">
                                                    <div class="author-content">
                                                        <a href="https://live.mangabooth.com/x/manga-author/the-author/" rel="tag">@Model.Author</a>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>

                                        <div class="status manga-info-row">
                                            <div class="summary-heading">
                                                <i class="fa fa-rss text-primary me-2"></i>
                                                <span>Tình trạng</span>
                                            </div>
                                            <div class="summary-content">
                                                <span class="@(Model.Status ? "text-green-500" : "text-yellow-500")">
                                                    @(Model.Status ? "Hoàn thành" : "Đang tiến hành")
                                                </span>
                                            </div>
                                        </div>
                                        <div class="d-flex align-items-center">
                                            <div class="summary-heading">
                                                <i class="fas fa-eye text-primary "></i>
                                                <span>Lượt Xem:</span>
                                            </div>
                                            <div class="summary-content">
                                                <p class="text-lg">@Model.View</p>
                                            </div>
                                        </div>
                                        <div class="d-flex align-items-center">
                                            <div class="summary-heading">
                                                <i class="fas fa-heart text-primary"></i>
                                                <span>Lượt Thích:</span>
                                            </div>
                                            <div class="summary-content">
                                                <p class="text-lg" id="likeCount">@(Model.Likes?.Count() ?? 0)</p>
                                            </div>
                                        </div>

                                        <div class="d-flex align-items-center">
                                            <div class="summary-heading">
                                                <i class="fas fa-bookmark text-primary"></i>
                                                <span>Theo Dõi:</span>
                                            </div>
                                            <div class="summary-content">
                                                <p class="text-lg" id="followCount">@(Model.Follows?.Count() ?? 0)</p>
                                            </div>
                                        </div>
                                        <div class="d-flex align-items-center">
                                            <div class="summary-heading">
                                                <i class="fas fa-bookmark text-primary"></i>
                                                <span>Số Chương:</span>
                                            </div>
                                            <div class="summary-content">
                                                <p class="text-lg">@(Model.Chapters?.Count() ?? 0)</p>

                                            </div>
                                        </div>
                                    </div>


                                    <div class="release-time author-row">
                                        <!-- Chapters List -->
                                        <div class="bg-dark-300 rounded-lg p-4 border border-gray-800">
                                            <div class="flex justify-between items-center mb-4">
                                                <h3 class="font-bold text-lg text-white">Danh sách chương</h3>
                                                <div class="flex space-x-2">
                                                    <button class="px-3 py-1 bg-dark-400 rounded hover:bg-dark-200 border border-gray-800">
                                                        <i class="fas fa-sort-amount-down"></i>
                                                    </button>
                                                    <button class="px-3 py-1 bg-dark-400 rounded hover:bg-dark-200 border border-gray-800">
                                                        <i class="fas fa-sort-amount-up"></i>
                                                    </button>
                                                </div>
                                            </div>
                                            <div class="space-y-2 max-h-[500px] overflow-y-auto pr-2">
                                                @if (Model.Chapters != null && Model.Chapters.Where(c => c.IsPublished && c.DeletedAt == null).Any())
                                                {
                                                    @foreach (var chapter in Model.Chapters.Where(c => c.IsPublished && c.DeletedAt == null).OrderByDescending(c => c.ChapterNumber))
                                                    {
                                                        <a href="@Url.Action("Index", "ReadChapter", new { id = chapter.Id })"
                                                           class="flex justify-between items-center p-3 bg-dark-400 hover:bg-dark-200 rounded-lg transition border border-gray-800">
                                                            <div class="flex items-center space-x-3">
                                                                <span class="text-primary font-medium">Chapter @chapter.ChapterNumber</span>
                                                                <span class="text-gray-300">@chapter.ChapterTitle</span>
                                                            </div>
                                                            <div class="flex items-center space-x-4">
                                                                <span class="text-gray-400 text-sm">
                                                                    <i class="far fa-clock mr-1"></i>
                                                                    @(chapter.PublishedDate?.ToString("dd/MM/yyyy") ?? chapter.CreatedAt?.ToString("dd/MM/yyyy"))
                                                                </span>
                                                            </div>
                                                        </a>
                                                    }
                                                }
                                                else
                                                {
                                                    <div class="text-center py-8 text-gray-400">
                                                        <i class="fas fa-book-open text-4xl mb-2"></i>
                                                        <p>Chưa có chương nào được xuất bản</p>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <h1> Truyện khác</h1>
                            <br />
                            <div id="c-post-slider-234" class="manga-x-slider no-full-width style-3" data-style="style-3" data-count="4">
                                <div class="slider_container_custom" role="toolbar">
                                    @foreach (var comic in ViewBag.Comics as List<Comic>) // Ép kiểu để tránh lỗi
                                    {
                                        <div class="slider_item">
                                            <div class="slider_thumb">
                                                @if (comic.View > 1000)
                                                {
                                                    <span class="manga-title-badges custom trending">trending</span>
                                                }
                                                else if (comic.Status)
                                                {
                                                    <span class="manga-title-badges hot">HOT</span>
                                                }

                                                <div class="slider_thumb-item">
                                                    <a href="@Url.Action("Detail", "Comic", new { id = comic.Id })">
                                                        <img src="@comic.CoverImage" alt="@comic.Title" width="250" height="500">
                                                    </a>
                                                    <div class="slider-overlay"></div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>

                            <!-- Comments Section -->

                            <div class="mt-5 scroll-container">
                                <div class="card bg-dark text-white border-secondary rounded-3 p-4">
                                    <h3 class="fw-bold fs-4">Bình luận</h3>

                                    @if (User.Identity.IsAuthenticated)
                                    {
                                        <form class="mb-4 comment-form" id="top-level-comment-form">
                                            <textarea rows="3"
                                                      class="form-control bg-dark text-light border-secondary rounded-3 p-3 mb-3"
                                                      placeholder="Viết bình luận..." name="content"></textarea>
                                            <div class="d-flex justify-content-end">
                                                <button type="submit" class="btn btn-primary px-4 py-2">
                                                    <i class="fas fa-paper-plane me-2"></i>Gửi bình luận
                                                </button>
                                            </div>
                                            <input type="hidden" name="comicId" value="@Model.Id" />
                                            <input type="hidden" name="parentId" value="" />
                                        </form>
                                    }
                                    else
                                    {
                                        <div class="text-center mb-4 bg-dark p-4 rounded-3 border border-secondary">
                                            <i class="fas fa-lock fs-2 text-primary mb-2"></i>
                                            <p class="mb-3">Vui lòng đăng nhập để bình luận</p>
                                            <a href="/login" class="text-primary text-decoration-underline">
                                                <i class="fas fa-sign-in-alt me-2"></i>Đăng nhập ngay
                                            </a>
                                        </div>
                                    }

                                    <div class="space-y-4" id="comments-container">
                                        @if (ViewBag.Comments != null && (ViewBag.Comments as List<Comment>).Count > 0)
                                        {
                                            @await Html.PartialAsync("_CommentPartial", ViewBag.Comments as List<Comment>)
                                        }
                                        else
                                        {
                                            <div class="text-center py-5 text-muted" id="no-comments-message">
                                                <i class="far fa-comments fs-2 mb-2"></i>
                                                <p>Chưa có bình luận nào</p>
                                            </div>
                                        }
                                    </div>

                                    @if (ViewBag.TotalComments > ViewBag.PageSize)
                                    {
                                        <div class="text-center mt-4">
                                            <button id="view-more-btn" class="btn btn-primary px-4 py-2"
                                                    data-skip="@ViewBag.PageSize"
                                                    data-comic-id="@ViewBag.ComicId"
                                                    data-total="@ViewBag.TotalComments"
                                                    data-page-size="@ViewBag.PageSize">
                                                Xem thêm
                                            </button>
                                        </div>
                                    }
                                </div>
                            </div>

                            <!-- Hidden reply form template -->
                            <div class="reply-form-template" style="display: none;">
                                @if (User.Identity.IsAuthenticated)
                                {
                                    <form class="mb-4 reply-form">
                                        <textarea rows="2"
                                                  class="form-control bg-dark text-light border-secondary rounded-3 p-3 mb-3"
                                                  placeholder="Viết phản hồi..." name="content"></textarea>
                                        <div class="d-flex justify-content-end gap-2">
                                            <button type="button" class="btn btn-secondary px-4 py-2 cancel-reply">Hủy</button>
                                            <button type="submit" class="btn btn-primary px-4 py-2">
                                                <i class="fas fa-paper-plane me-2"></i>Gửi
                                            </button>
                                        </div>
                                        <input type="hidden" name="comicId" value="@Model.Id" />
                                        <input type="hidden" name="parentId" class="parent-id" value="" />
                                    </form>
                                }
                                else
                                {
                                    <div class="text-center mb-4 bg-dark p-3 rounded-3 border border-secondary">
                                        <p class="mb-2">Vui lòng đăng nhập để phản hồi</p>
                                        <a href="/login" class="text-primary text-decoration-underline">
                                            <i class="fas fa-sign-in-alt me-2"></i>Đăng nhập ngay
                                        </a>
                                    </div>
                                }
                            </div>

                            <!-- Hidden edit form template -->
                            <div class="edit-form-template" style="display: none;">
                                <form class="mb-4 edit-form">
                                    <textarea rows="2"
                                              class="form-control bg-dark text-light border-secondary rounded-3 p-3 mb-3 edit-content"
                                              name="content"></textarea>
                                    <div class="d-flex justify-content-end gap-2">
                                        <button type="button" class="btn btn-secondary px-4 py-2 cancel-edit">Hủy</button>
                                        <button type="submit" class="btn btn-primary px-4 py-2">
                                            <i class="fas fa-save me-2"></i>Lưu
                                        </button>
                                    </div>
                                    <input type="hidden" class="edit-comment-id" value="" />
                                </form>
                            </div>

                        </div>
                    </div><!-- <div class="site-content"> -->




                    <footer class="site-footer">

                        <div class="ad c-ads custom-code footer-ads col-md-12"><a href="https://mangabooth.com/product/wp-manga-theme-madara/"><img src="images/Build-The-Best-Manga-Site.jpg"></a></div>

                        <div class="c-footer-sidebar">
                            <div class="container">
                                <div class="row c-row">
                                    <div id="manga-genres-id-3" class="widget col-12 col-md-12   default no-icon  manga-genres-class-name">
                                        <div class="widget__inner manga-genres-class-name__inner c-widget-wrap">
                                            <div class="genres_wrap">
                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <div class="widget-heading font-nav"><h5 class="heading">All Genres</h5></div><div class="widget-content">
                                                            <div class="genres__collapse" style="display:block;">
                                                                <div class="row genres">
                                                                    <ul class="list-unstyled">
                                                                        <li class="col-xs-6 col-sm-4 col-md-3 col-lg-2 col-6">
                                                                            <a href="https://live.mangabooth.com/x/manga-genre/action/">
                                                                                action                                                                                                    <span class="count">
                                                                                    (37)
                                                                                </span>
                                                                            </a>
                                                                        </li>
                                                                        <li class="col-xs-6 col-sm-4 col-md-3 col-lg-2 col-6">
                                                                            <a href="https://live.mangabooth.com/x/manga-genre/adventure/">
                                                                                adventure                                                                                                    <span class="count">
                                                                                    (37)
                                                                                </span>
                                                                            </a>
                                                                        </li>
                                                                        <li class="col-xs-6 col-sm-4 col-md-3 col-lg-2 col-6">
                                                                            <a href="https://live.mangabooth.com/x/manga-genre/boys/">
                                                                                boys                                                                                                    <span class="count">
                                                                                    (37)
                                                                                </span>
                                                                            </a>
                                                                        </li>
                                                                        <li class="col-xs-6 col-sm-4 col-md-3 col-lg-2 col-6">
                                                                            <a href="https://live.mangabooth.com/x/manga-genre/chinese/">
                                                                                chinese                                                                                                    <span class="count">
                                                                                    (37)
                                                                                </span>
                                                                            </a>
                                                                        </li>
                                                                        <li class="col-xs-6 col-sm-4 col-md-3 col-lg-2 col-6">
                                                                            <a href="https://live.mangabooth.com/x/manga-genre/drama/">
                                                                                drama                                                                                                    <span class="count">
                                                                                    (37)
                                                                                </span>
                                                                            </a>
                                                                        </li>
                                                                        <li class="col-xs-6 col-sm-4 col-md-3 col-lg-2 col-6">
                                                                            <a href="https://live.mangabooth.com/x/manga-genre/ecchi/">
                                                                                ecchi                                                                                                    <span class="count">
                                                                                    (38)
                                                                                </span>
                                                                            </a>
                                                                        </li>
                                                                        <li class="col-xs-6 col-sm-4 col-md-3 col-lg-2 col-6">
                                                                            <a href="https://live.mangabooth.com/x/manga-genre/fighting/">
                                                                                fighting                                                                                                    <span class="count">
                                                                                    (38)
                                                                                </span>
                                                                            </a>
                                                                        </li>
                                                                        <li class="col-xs-6 col-sm-4 col-md-3 col-lg-2 col-6">
                                                                            <a href="https://live.mangabooth.com/x/manga-genre/fun/">
                                                                                fun                                                                                                    <span class="count">
                                                                                    (37)
                                                                                </span>
                                                                            </a>
                                                                        </li>
                                                                        <li class="col-xs-6 col-sm-4 col-md-3 col-lg-2 col-6">
                                                                            <a href="https://live.mangabooth.com/x/manga-genre/girl/">
                                                                                girl                                                                                                    <span class="count">
                                                                                    (37)
                                                                                </span>
                                                                            </a>
                                                                        </li>
                                                                        <li class="col-xs-6 col-sm-4 col-md-3 col-lg-2 col-6">
                                                                            <a href="https://live.mangabooth.com/x/manga-genre/horrow/">
                                                                                horrow                                                                                                    <span class="count">
                                                                                    (37)
                                                                                </span>
                                                                            </a>
                                                                        </li>
                                                                        <li class="col-xs-6 col-sm-4 col-md-3 col-lg-2 col-6">
                                                                            <a href="https://live.mangabooth.com/x/manga-genre/manhwa/">
                                                                                manhwa                                                                                                    <span class="count">
                                                                                    (37)
                                                                                </span>
                                                                            </a>
                                                                        </li>
                                                                    </ul>
                                                                </div>
                                                            </div>

                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="bottom-footer">
                            <div class="container">
                                <div class="row">
                                    <div class="col-md-12">

                                        <div class="copyright">
                                            <h3>Manta</h3>
                                            <p>Madara WordPress Theme by Mangabooth.com</p>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>

                    </footer>


                </div> <!-- class="wrap" -->
            </div> <!-- class="body-wrap" -->


        </div>
        <div class="go-to-top active">
            <i class="icon ion-md-arrow-up"></i>
        </div>
    </div>
    <script src="~/microsoft/signalr/dist/browser/signalr.js"></script>
    <script src="~/lib/sweetalert2/sweetalert2@11.js"></script>
    <script>
        // Back to Top Button
        const backToTop = document.getElementById('back-to-top');

        window.addEventListener('scroll', () => {
            if (window.pageYOffset > 300) {
                backToTop.classList.remove('opacity-0', 'invisible');
                backToTop.classList.add('opacity-100', 'visible');
            } else {
                backToTop.classList.add('opacity-0', 'invisible');
                backToTop.classList.remove('opacity-100', 'visible');
            }
        });

        backToTop.addEventListener('click', () => {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        });

        // Chapter Sort Buttons
        const chapterList = document.querySelector('.max-h-\\[500px\\]');
        const sortButtons = document.querySelectorAll('.bg-dark-400.rounded');

        sortButtons.forEach(button => {
            button.addEventListener('click', () => {
                const chapters = Array.from(chapterList.children);
                chapters.reverse();
                chapters.forEach(chapter => chapterList.appendChild(chapter));
            });
        });
    </script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/commentHub")
            .withAutomaticReconnect()
            .build();

        connection.start().then(() => {
            connection.invoke("JoinComicGroup", "@Model.Id").catch(err => console.error(err));
        }).catch(err => console.error(err));

        // Listen for the ReloadComments message
        connection.on("ReloadComments", (comicId) => {
            setTimeout(() => reloadComments(0), 300);
            // Reload comments from the beginning
        });

        connection.on("ReceiveComicUpdate", function (comicId, followCount, likeCount) {
            const currentComicId = "@Model.Id";
            if (comicId === currentComicId) {
                document.getElementById("followCount").textContent = followCount;
                document.getElementById("likeCount").textContent = likeCount;
            }
        }); 

        // Function to reload comments
        function reloadComments(skip) {
            const comicId = "@Model.Id";
            fetch(`/Detail/GetComments?comicId=${comicId}&skip=${skip}`)
                .then(response => response.json())
                .then(data => {
                    const commentsContainer = document.getElementById('comments-container');
                    commentsContainer.innerHTML = data.html.result;;

                    const viewMoreBtn = document.getElementById('view-more-btn');
                    console.log(viewMoreBtn);
                    if (viewMoreBtn) {
                        viewMoreBtn.setAttribute('data-total', data.totalComments);
                        viewMoreBtn.setAttribute('data-skip', skip + 5);

                        if (skip + 5 >= data.totalComments) {
                            viewMoreBtn.style.display = 'none';
                        } else {
                            viewMoreBtn.style.display = 'inline-block';
                        }
                    }

                    // Re-attach event listeners
                    attachReplyListeners();
                    attachViewRepliesListeners();
                    attachEditListeners();
                    attachDeleteListeners();
                })
                .catch(error => console.error('Error reloading comments:', error));
        }

        document.addEventListener('DOMContentLoaded', () => {
            // Handle top-level comment form submission
            const topLevelCommentForm = document.getElementById('top-level-comment-form');
            if (topLevelCommentForm) {
                topLevelCommentForm.addEventListener('submit', (e) => {
                    e.preventDefault();
                    const formData = new FormData(topLevelCommentForm);
                    const content = formData.get('content');
                    const comicId = formData.get('comicId');
                    const parentId = formData.get('parentId') || null;

                    if (!content.trim()) {
                        alert('Vui lòng nhập nội dung bình luận.');
                        return;
                    }

                    fetch(`/Detail/Comment`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                        },
                        body: `comicId=${comicId}&content=${encodeURIComponent(content)}&parentId=${parentId}`
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (!data.success) {
                                alert(data.message || 'Có lỗi xảy ra khi gửi bình luận.');
                                return;
                            }

                            // Clear the form
                            topLevelCommentForm.reset();
                        })
                        .catch(error => console.error('Error submitting comment:', error));
                });
            }

            // Handle "View More" button click
            const viewMoreBtn = document.getElementById('view-more-btn');
            if (viewMoreBtn) {
                viewMoreBtn.addEventListener('click', () => {
                    const skip = parseInt(viewMoreBtn.getAttribute('data-skip'));
                    const comicId = viewMoreBtn.getAttribute('data-comic-id');
                    const totalComments = parseInt(viewMoreBtn.getAttribute('data-total'));
                    const pageSize = parseInt(viewMoreBtn.getAttribute('data-page-size'));

                    fetch(`/Detail/GetMoreComments?comicId=${comicId}&skip=${skip}`)
                        .then(response => response.text())
                        .then(html => {
                            const commentsContainer = document.getElementById('comments-container');
                            commentsContainer.insertAdjacentHTML('beforeend', html);

                            const newSkip = skip + pageSize;
                            viewMoreBtn.setAttribute('data-skip', newSkip);

                            if (newSkip >= totalComments) {
                                viewMoreBtn.style.display = 'none';
                            }

                            attachReplyListeners();
                            attachViewRepliesListeners();
                            attachEditListeners();
                            attachDeleteListeners();
                        })
                        .catch(error => console.error('Error loading more comments:', error));
                });
            }

            // Attach event listeners for existing comments
            attachViewRepliesListeners();
            attachReplyListeners();
            attachEditListeners();
            attachDeleteListeners();
        });

        function attachReplyListeners() {
            const replyButtons = document.querySelectorAll('.reply-btn');
            const replyFormTemplate = document.querySelector('.reply-form-template').children[0];

            replyButtons.forEach(button => {
                button.addEventListener('click', (e) => {
                    e.preventDefault();

                    const existingForm = button.closest('.comment').querySelector('.reply-form');
                    if (existingForm) {
                        existingForm.remove();
                    }

                    const replyForm = replyFormTemplate.cloneNode(true);
                    replyForm.style.display = 'block';

                    const parentId = button.getAttribute('data-comment-id');
                    replyForm.querySelector('.parent-id').value = parentId;

                    const comment = button.closest('.comment');
                    comment.appendChild(replyForm);

                    // Handle cancel button
                    const cancelButton = replyForm.querySelector('.cancel-reply');
                    if (cancelButton) {
                        cancelButton.addEventListener('click', () => {
                            replyForm.remove();
                        });
                    }

                    // Handle reply form submission
                    replyForm.addEventListener('submit', (e) => {
                        e.preventDefault();
                        const formData = new FormData(replyForm);
                        const content = formData.get('content');
                        const comicId = formData.get('comicId');
                        const parentId = formData.get('parentId');

                        if (!content.trim()) {
                            alert('Vui lòng nhập nội dung phản hồi.');
                            return;
                        }

                        fetch(`/Detail/Comment`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded',
                            },
                            body: `comicId=${comicId}&content=${encodeURIComponent(content)}&parentId=${parentId}`
                        })
                            .then(response => response.text())
                            .then(html => {
                                // Clear the form and hide it
                                replyForm.remove();
                            })
                            .catch(error => console.error('Error submitting reply:', error));
                    });
                });
            });
        }

        function attachViewRepliesListeners() {
            document.querySelectorAll('.view-replies-btn').forEach(button => {
                // Xóa tất cả sự kiện cũ trước khi gán sự kiện mới
                button.replaceWith(button.cloneNode(true));
            });
            document.querySelectorAll('.view-replies-btn').forEach(button => {
                button.addEventListener('click', (e) => {
                    e.preventDefault();
                    const commentId = button.getAttribute('data-comment-id');
                    const repliesContainer = button.closest('.comment').querySelector('.replies-container');

                    if (repliesContainer.innerHTML.trim() !== '') {
                        repliesContainer.classList.toggle('hiddenReply');
                        button.textContent = repliesContainer.classList.contains('hiddenReply') ? 'Xem phản hồi' : 'Ẩn phản hồi';
                        return;
                    }

                    fetch(`/Detail/GetReplies?commentId=${commentId}`)
                        .then(response => response.text())
                        .then(html => {
                            repliesContainer.innerHTML = html;
                            repliesContainer.classList.remove('hiddenReply');
                            button.textContent = 'Ẩn phản hồi';

                            attachReplyListeners();
                            attachViewRepliesListeners();
                            attachEditListeners();
                            attachDeleteListeners();
                        })
                        .catch(error => console.error('Error loading replies:', error));
                });
            });
        }

        function attachEditListeners() {
            const editButtons = document.querySelectorAll('.edit-btn');
            const editFormTemplate = document.querySelector('.edit-form-template').children[0];

            editButtons.forEach(button => {
                button.addEventListener('click', (e) => {
                    e.preventDefault();

                    const commentId = button.getAttribute('data-comment-id');
                    const comment = button.closest('.comment');
                    const existingForm = comment.querySelector('.edit-form');
                    if (existingForm) {
                        existingForm.remove();
                    }

                    const editForm = editFormTemplate.cloneNode(true);
                    editForm.style.display = 'block';

                    // Pre-fill the form with the current comment content
                    const commentContent = comment.querySelector('.comment-content').textContent;
                    editForm.querySelector('.edit-content').value = commentContent;
                    editForm.querySelector('.edit-comment-id').value = commentId;

                    comment.appendChild(editForm);

                    // Handle cancel button
                    const cancelButton = editForm.querySelector('.cancel-edit');
                    cancelButton.addEventListener('click', () => {
                        editForm.remove();
                    });

                    // Handle form submission
                    editForm.addEventListener('submit', (e) => {
                        e.preventDefault();
                        const formData = new FormData(editForm);
                        const content = formData.get('content');

                        fetch(`/Detail/EditComment?commentId=${commentId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded',
                            },
                            body: `content=${encodeURIComponent(content)}`
                        })
                            .then(response => response.text())
                            .then(html => {
                                editForm.remove();
                            })
                            .catch(error => console.error('Error editing comment:', error));
                    });
                });
            });
        }

        function attachDeleteListeners() {
            const deleteButtons = document.querySelectorAll('.delete-btn');

            deleteButtons.forEach(button => {
                button.addEventListener('click', async (e) => {
                    e.preventDefault();

                    // Hiển thị hộp thoại xác nhận
                    const result = await Swal.fire({
                        title: 'Bạn có chắc muốn xóa bình luận này không?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Xóa',
                        cancelButtonText: 'Hủy',
                        allowOutsideClick: false
                    });

                    if (!result.isConfirmed) {
                        return;
                    }


                    const commentId = button.getAttribute('data-comment-id');
                    fetch(`/Detail/DeleteComment?commentId=${commentId}`, {
                        method: 'POST'
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {

                            }
                        })
                        .catch(error => console.error('Error deleting comment:', error));
                });
            });
        }
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const followButton = document.getElementById("followButton");
            const followText = document.getElementById("followText");

            if (!followButton) return;

            followButton.addEventListener("click", async (event) => {
                event.preventDefault(); // Ngăn form submit lại trang

                const comicId = followButton.getAttribute("data-comic-id");
                if (!comicId) {
                    alert("Không tìm thấy ID truyện!");
                    return;
                }

                console.log("Gửi request với ID:", comicId); // Debug

                try {
                    const tokenElement = document.querySelector('input[name="__RequestVerificationToken"]');
                    if (!tokenElement) throw new Error("Không tìm thấy token xác thực.");
                    const token = tokenElement.value;

                    const response = await fetch("/Detail/ToggleFollow", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                            "X-Requested-With": "XMLHttpRequest",
                            "RequestVerificationToken": token
                        },
                        body: JSON.stringify({ id: comicId })
                    });

                    const data = await response.json();
                    console.log("Response từ server:", data);

                    if (data.success) {
                        followButton.classList.toggle("bg-primary", data.isFollowing);
                        followButton.classList.toggle("bg-dark-300", !data.isFollowing);
                        followText.textContent = data.isFollowing ? "Đang theo dõi" : "Theo dõi";
                    } else {
                        alert(data.message);
                    }
                } catch (error) {
                    console.error("Lỗi khi gửi request:", error);
                    alert("Có lỗi xảy ra: " + error.message);
                }
            });
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const likeButton = document.getElementById("likeButton");
            const likeText = document.getElementById("likeText");

            if (!likeButton) return;

            likeButton.addEventListener("click", async (event) => {
                event.preventDefault();

                const comicId = likeButton.getAttribute("data-comic-id");
                if (!comicId) {
                    alert("Không tìm thấy ID truyện!");
                    return;
                }

                console.log("Gửi request Like với ID:", comicId);

                try {
                    const tokenElement = document.querySelector('input[name="__RequestVerificationToken"]');
                    if (!tokenElement) throw new Error("Không tìm thấy token xác thực.");
                    const token = tokenElement.value;

                    const response = await fetch("/Detail/ToggleLike", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                            "X-Requested-With": "XMLHttpRequest",
                            "RequestVerificationToken": token
                        },
                        body: JSON.stringify({ id: comicId })
                    });

                    const data = await response.json();
                    console.log("Response từ server:", data);

                    if (data.success) {
                        likeButton.classList.toggle("liked", data.isLiked);
                        likeText.textContent = data.isLiked ? "Đã thích" : "Thích";
                        // Nếu muốn hiển thị số lượt thích, có thể thêm:
                        // likeButton.querySelector(".like-count").textContent = data.likeCount;
                    } else {
                        alert(data.message);
                    }
                } catch (error) {
                    console.error("Lỗi khi gửi request:", error)
                    alert("Có lỗi xảy ra: " + error.message);
                }
            });
        });
    </script>


</body><!-- Dynamic page generated in 0.586 seconds. --><!-- Cached page generated by WP-Super-Cache on 2025-03-24 06:32:20 --><!-- super cache -->